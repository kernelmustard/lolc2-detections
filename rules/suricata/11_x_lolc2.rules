# url: https://api.x.com/2/*
# url: https://api.x.com/2/tweets
# url: https://api.x.com/2/dm_conversations/with/*/messages
# url: https://api.x.com/2/users/*/tweets
# url: https://api.x.com/2/dm_conversations
# url: https://api.x.com/2/users/me
# url: https://api.x.com/2/lists
# url: https://api.x.com/2/tweets/*

# basic rules to see x api use in your network
alert dns $HOME_NET any -> any 53 (msg:"LOLC2 X (DNS Query)"; dns.query; content:"api.x.com"; nocase; bsize:9; classtype:command-and-control; sid:1000100; rev:1; reference:url,https://lolc2.github.io/; metadata:created_at 2025_04_11, confidence Medium, signature_severity Medium, updated_at 2025_04_11;)

alert tls $HOME_NET any <> $EXTERNAL_NET any (msg:"LOLC2 X (TLS SNI)"; tls.sni; content:"api.x.com"; nocase; endswith; classtype:command-and-control; sid:1000101; rev:1; reference:url,https://lolc2.github.io/; metadata:created_at 2025_04_11, confidence Medium, signature_severity Medium, updated_at 2025_04_11;)

alert http $HOME_NET any -> $EXTERNAL_NET any (msg:"LOLC2 X (HTTP Host and URI)"; http.host; content:"api.x.com"; http.uri; pcre:"/^\/2\/(?:tweets(?:\/.+)?|dm_conversations(?:\/with\/.+\/messages)?|users\/(?:.+\/tweets|me)|lists|.+)$/i"; classtype:command-and-control; sid:1000102; rev:1; reference:url,https://lolc2.github.io/; metadata:created_at 2025_04_11, confidence Medium, signature_severity Medium, updated_at 2025_04_11;)

# detection strategy: High-frequency GETs to /users/<id>/tweets or /dm_conversations (unsure what a good threshold is, adjust during testing)
alert http $HOME_NET any -> $EXTERNAL_NET any (msg:"LOLC2 X (High-Frequency GETs to tweets or dm APIs)"; http.host; content:"api.x.com"; http.method; content:"GET"; http.uri; pcre:"/\/2\/(?:users\/.+\/tweets|dm_conversations)$/i"; threshold:type threshold, count 5, seconds 30, track by_src; classtype:command-and-control; sid:1000103; rev:1; reference:url,https://lolc2.github.io/; metadata:created_at 2025_04_11, confidence Medium, signature_severity Medium, updated_at 2025_04_11;)

# detection strategy: POSTs to /tweets or /dm_conversations/with/<id>/messages
alert http $HOME_NET any -> $EXTERNAL_NET any (msg:"LOLC2 X (HTTP POST to tweets or dm APIs)"; http.host; content:"api.x.com"; http.method; content:"POST"; http.uri; pcre:"/^\/2\/(?:tweets|dm_conversations\/with\/.+\/messages)$/i"; classtype:command-and-control; sid:1000104; rev:1; reference:url,https://lolc2.github.io/; metadata:created_at 2025_04_11, confidence Medium, signature_severity Medium, updated_at 2025_04_11;)

# detection strategy: PATCH requests to /users/me with structured bio updates.
alert http $HOME_NET any -> $EXTERNAL_NET any (msg:"LOLC2 X (HTTP PATCH to me API)"; http.host; content:"api.x.com"; http.method; content:"PATCH"; http.uri; content:"/users/me"; classtype:command-and-control; sid:1000105; rev:1; reference:url,https://lolc2.github.io/; metadata:created_at 2025_04_11, confidence Medium, signature_severity Medium, updated_at 2025_04_11;)

# TODO add detection for b64 encoded payloads from XC2 implant client
